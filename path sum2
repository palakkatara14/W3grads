/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer>  ls=new ArrayList<>();
        path(root,targetSum,ans,ls);
        return  ans;
    }
    public void path(TreeNode root,int targetSum,List<List<Integer>> ans,List<Integer> ls){
        if(root==null){
            return;
        }
        if(root.left==null && root.right==null){
            if(root.val==targetSum){
               ls.add(root.val);
               ans.add(new ArrayList<>(ls));
               ls.remove(ls.size()-1);

            }
            
        }
        ls.add(root.val);
        path(root.left,targetSum-root.val,ans,ls);
        path(root.right,targetSum-root.val,ans,ls);
        ls.remove(ls.size()-1);

    }
}
