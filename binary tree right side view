/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
           ArrayList<Integer> ls=new ArrayList<>();
           int[] maxHeight=new int[1];
           //int maxHeight=0;
           rightView(root,maxHeight,ls,1);
           return ls;

    }
    public void rightView(TreeNode root,int[] maxHeight,ArrayList<Integer> ls,int curr){
        if(root==null){
            return;
        }
        if(curr>maxHeight[0]){
            ls.add(root.val);
            maxHeight[0]=curr;
        }
        rightView(root.right,maxHeight,ls,curr+1);
        rightView(root.left,maxHeight,ls,curr+1);

    }
}
