1.//Reverse integer
class Solution {
    public int reverse(int x) {
        long sum=0;
        int r;
        while(x!=0){
           r=x%10;
           sum=sum*10+r;
           x=x/10;
           
       
        
            if(sum>Integer.MAX_VALUE ||sum <Integer.MIN_VALUE){
                return 0;
            }
        }
        return (int)sum;

        
    }
}
2.//Palindrome Number
class Solution {
    public boolean isPalindrome(int x){
          int r;
          int temp;
          int sum=0;
          temp=x;
          
          while(x>0){
              r=x%10;
              x=x/10;
              sum=(sum*10)+r;
           }
           
           if(sum==temp){
               return true;
           }
           else{
               return false;
           }
    }
}
3.//Armstrong Numbers
/{ Driver Code Starts
//Initial Template for Java
import java.util.*;
import java.io.*;
class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            int n = Integer.parseInt(read.readLine());
            Solution ob = new Solution();

            System.out.println(ob.armstrongNumber(n));
        }
    }
}
// } Driver Code Ends


//User function Template for Java
class Solution {
    static String armstrongNumber(int n){
        int r;
            double sum=0;
            int temp;
            
            
            temp=n;
            while(n!=0){
                r=n%10;
                n=n/10;
                sum=sum+(int)Math.pow(r,3);
               
                
            }
            if(sum==temp){
                return "Yes";
            }
            else{
                 return "No";
            }
    }
}
4.//Problem-4A:Watermelon
import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int w=sc.nextInt();
        if(w>2 && w%2==0){
            System.out.println("Yes");
        }
        else{
            System.out.println("No");
        }
    }
}
5.//LCM AND GCD
class Solution {
    static Long[] lcmAndGcd(Long A , Long B) {
        
        Long gcd = gcd(A, B);
        
        Long lcm = (A / gcd) * B;
        
        return new Long[]{lcm, gcd};
    }

    static Long gcd(Long a, Long b){
        
        while(a>0 && b>0) {
            
            if(a > b) {
                
                a %= b;
            }
            
            else {
                
                b %= a;
            }
        }
        
        if(a == 0) {
            return b;
        }
       
        else{
            return a;
        }
    }
}

//6.GAME WITH INTEGERS 1889
import java.util.*;
public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-->0){
            int n = sc.nextInt();
            if(n%3==0){
                 System.out.println("Second");
             }
            else{
               System.out.println("First");
        }
    }
}
//7.

